#!/usr/bin/env bash

echo "Setting up vim dotfile and plugins"

dotfiles_repo=$(utils/repo_path)
echo "Dotfiles repo is in $dotfiles_repo"

vimrc_source_path=$dotfiles_repo/vim/vimrc
vimrc_symlink_path=$HOME/.vimrc
vimrc_backup_path=$HOME/.vimrc_old

if ! [ "$(readlink $vimrc_symlink_path)" = "$vimrc_source_path" ]; then

    if [ -e $vimrc_symlink_path ]; then
        echo "Moving current $vimrc_symlink_path to $vimrc_backup_path"
        mv $vimrc_symlink_path $vimrc_backup_path
    fi

    echo "Symlinking $vimrc_symlink_path to $vimrc_source_path"
    ln -s $vimrc_source_path $vimrc_symlink_path
else
    echo "$vimrc_symlink_path points correctly to $vimrc_source_path"
fi

echo "Ensuring vim plugins and docs"

dotvim_path=$HOME/.vim
bundle_path=$dotvim_path/bundle
autoload_path=$dotvim_path/autoload
mkdir -p $bundle_path $autoload_path

# Install pathogen (plugin manager)

pathogen_path=$autoload_path/pathogen.vim

if ! [ -f $pathogen_path ]; then
    echo "Installing pathogen"
    curl -LSso $pathogen_path https://tpo.pe/pathogen.vim
fi


ensure_plugin () {
    plugin_name=$1
    repo_url=$2
    plugin_path=$bundle_path/$plugin_name

    if ! [ -d $plugin_path ]; then
        echo "Installing plugin: $plugin_name"
        git clone $repo_url $plugin_path
    else
        echo "Plugin $plugin_name is already installed at $plugin_path"
    fi
}


# ctrlp plugin
ensure_plugin ctrlp.vim https://github.com/kien/ctrlp.vim.git

# NERDTree plugin
ensure_plugin nerdtree https://github.com/scrooloose/nerdtree.git

# vim-flake8 plugin
ensure_plugin vim-flake8 https://github.com/nvie/vim-flake8

pip list | grep flake8 > /dev/null

if [ $? == 1 ]; then
    echo "Installing flake8"
    pip install flake8
fi

# Ag plugin
ensure_plugin ag.vim https://github.com/rking/ag.vim

# vim-rpsec plugin
ensure_plugin vim-rspec https://github.com/thoughtbot/vim-rspec

# surround plugin
ensure_plugin vim-surround https://github.com/tpope/vim-surround

# tagbar plugin
ensure_plugin tagbar https://github.com/majutsushi/tagbar

# colorschemes plugin
ensure_plugin vim-colorschemes https://github.com/relaxdiego/vim-colorschemes

# lightline plugin
ensure_plugin lightline.vim https://github.com/relaxdiego/lightline.vim

# YouCompleteMe plugin
plugin_name='YouCompleteMe'
ensure_plugin $plugin_name https://github.com/relaxdiego/YouCompleteMe
if ! [ -f $bundle_path/$plugin_name/third_party/ycmd/ycm_core.so ]; then
    cd $bundle_path/$plugin_name
    git submodule update --init --recursive
    ./install.py --clang-completer --gocode-completer
    cd -
else
    echo "Plugin YouCompleteMe is already configured"
fi
echo "If you're having problems with YCM, see https://github.com/Valloric/YouCompleteMe/issues/8#issuecomment-34374807"

# Generate the docs for all plugins
echo "Running 'Helptags' command"
vim +Helptags +q

# Add puppet syntax highlighting
if ! [ -f ${dotvim_path}/syntax/puppet.vim ]; then
    echo "Adding puppet syntax highlighting and goodies"
    tmp_puppetvims=/tmp/puppetvims
    mkdir -p $tmp_puppetvims
    cd $tmp_puppetvims
    git init
    git remote add -f origin https://github.com/puppetlabs/puppet
    git config core.sparseCheckout true
    echo "ext/vim/" >> .git/info/sparse-checkout
    git pull origin master
    cp -r ext/vim/* $dotvim_path
    cd -
else
    echo "Puppet syntax highlighting and goodies already exist"
fi
