# Set the command prefix
set -g prefix C-a
unbind C-b

# Remove time delay to avoid tripping vi
set -s escape-time 1

# synchronize-panes shortcut
bind y set-window-option synchronize-panes

# Use 1-based index for window numbers
set -g base-index 1

# Use 1-based index for pane numbers
set -g pane-base-index 1

# Reloads the config file
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# Send prefix to an application by pressing the prefix twice
bind C-a send-prefix

# Window splitting
bind | split-window -h
bind \ split-window -h
bind - split-window -v

# Pane movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Window movement
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Respond to mouse/trackpad inputs
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on

# Display things in 256 colors
set -g default-terminal "screen-256color"

# Set status bar color scheme
set -g status-fg white
set -g status-bg black
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# Set pane colors
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

# Set command line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Set the status bar information
set -g status-left-length 40
set -g status-left "#[bg=black,fg=green]S:#S  #[fg=yellow]W:#I  #[fg=cyan]P:#P "
set -g status-right "#[fg=cyan]%d %b %R"

# Set UTF-8 support in the status bar
set -g status-utf8 on

# Set status bar refresh interval
set -g status-interval 60

# Set window list alignment
set -g status-justify centre

# Set window notifications
setw -g monitor-activity on
setw -g visual-activity on

# Enable vi mode
setw -g mode-keys vi

# Make copy/paste same as vim
# unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# Integrate with OS X pasteboard
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
if-shell "uname | grep -q Darwin" "bind-key -t vi-copy y copy-pipe \"reattach-to-user-namespace pbcopy\""

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
if-shell "uname | grep -q Darwin" "bind-key -t vi-copy Enter copy-pipe \"reattach-to-user-namespace pbcopy\""
